.MODEL SMALL
.STACK 100H
.DATA
MESSAGE1 DB 'ENTER ELEMENTS : $' 
MESSAGE2 DB 'AFTER SORTING : $'
MESSAGE3 DB 'PRESS : 1-FOR ASCENDING ORDER  2-FOR DESCENDING ORDER ; $'
MESSAGE4 DB 'INVALID NUMBER $'
ARR DB 100 dup (0)
.CODE  



;MAIN 
MAIN PROC
    MOV AX,@DATA
    MOV DS,AX
    MOV AH,9       ;DISPLAY MESSAGE
    lea DX,MESSAGE1	;LOAD EFFICTIVE ADDRESS 
    INT 21H
    MOV CX,0  ;INC N_OF_ITEMS
    ;FILLING ARRAY
    MOV AH,1 ;FIRST INPUT AND INPUT GOES TO AL 
    INT 21H
    MOV SI,0
    WHILE_:
        CMP AL,0DH      ;COMPARE INPUT WITH CR
        JE END_WHILE    ;IF EQUAL JMP TO END_WHILE
        MOV ARR[SI],AL ;MOVE INPUT INTO ARRAY
        INC SI          ;SI+=1
        INC CX
        MOV AH,2
        MOV DX,' '     ;DISPLAY SPACE
        INT 21H
        MOV AH,1
        INT 21H
    JMP WHILE_          ;JMP WHILE_ TO CONTINUE ENTER THE INPUTS
    END_WHILE:		;PRINT NEW LINE
        MOV AH,2
        MOV DL,0DH
        INT 21H
        MOV DL,0AH
        INT 21H
    JCXZ EXIT ;IF CX == 0 JMP EXIT (NO INPTS ENTERED) 
    
    LEA SI,ARR ;OFFSET OF ARRAY INTO SI
    MOV BX,CX
    
    

 END MAIN
